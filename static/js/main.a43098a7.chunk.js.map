{"version":3,"sources":["static/images/woman.svg","static/images/man.svg","components/Navigation/index.js","components/Avatar.js","components/AvatarBox/index.js","components/InputBox/index.js","components/ConfirmationBox/index.js","components/ErrorBox/index.js","components/BaseBox.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","props","elementClass","paddingTopBig","react_default","a","createElement","className","children","Avatar","clickResponse","_this","clickHandler","Object","assertThisInitialized","avatarClass","this","isSelected","onClick","src","image","alt","React","Component","AvatarBox","state","gender","handleClick","element","setState","genderName","sendUserData","e","_this$props","checkErrors","preventDefault","_this2","Woman","Man","map","item","ndx","components_Avatar","key","components_Navigation","react_router_dom","to","nameBox","name","handleChange","target","value","isValid","test","length","onChange","type","ConfirmationBox","defaultStyle","transform","transition","concat","transitionStyles","entering","entered","exiting","exited","ErrorBox","message","errorBoxClass","errorType","checkError","Fragment","Transition","unmountOnExit","in","showError","timeout","style","objectSpread","BaseBox","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","userGender","userName","setUserGender","data","setUserName","clearTimeout","setTimeout","react_router","render","_ref","location","pathname","TransitionGroup","CSSTransition","classNames","enter","exit","exact","path","components_AvatarBox","InputBox","components_ConfirmationBox","components_ErrorBox","App","basename","process","components_BaseBox","Boolean","window","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a43098a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/woman.9e32ff17.svg\";","module.exports = __webpack_public_path__ + \"static/media/man.8bfd79fb.svg\";","import React from 'react';\r\n\r\nconst Navigation = (props) => {\r\n    let elementClass = 'navigation';\r\n\r\n    if (props.paddingTopBig) {\r\n        elementClass = 'navigation navigation--pt-big';\r\n    }\r\n\r\n    return (\r\n        <nav className={elementClass}>\r\n            {props.children}\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\n\r\n\r\nclass Avatar extends React.Component {\r\n\r\n    clickResponse = () => {\r\n        this.props.clickHandler(this);\r\n    };\r\n\r\n    render() {\r\n\r\n        let avatarClass = 'avatar';\r\n\r\n        const classHandler = () => {\r\n          if (this.props.isSelected) {\r\n              avatarClass += ' avatar--selected'\r\n          }\r\n        };\r\n        classHandler();\r\n\r\n        return (\r\n            <div className={avatarClass}>\r\n                <img onClick={this.clickResponse} className='avatar__img' src={this.props.image} alt=\"\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport Navigation from '../Navigation/'\r\nimport Avatar from '../Avatar'\r\nimport Woman from '../../static/images/woman.svg'\r\nimport Man from '../../static/images/man.svg'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass AvatarBox extends React.Component {\r\n    state = {\r\n        gender: '',\r\n    };\r\n\r\n    handleClick = (element) => {\r\n        this.setState({gender: element.props.genderName})\r\n    };\r\n\r\n    sendUserData = e => {\r\n        const {gender} = this.state;\r\n        const {sendUserData, checkErrors} = this.props;\r\n\r\n        sendUserData(gender);\r\n\r\n        if (gender === '') {\r\n            e.preventDefault();\r\n            checkErrors(1);\r\n        } else {\r\n            checkErrors(0);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const AvatarsList = () => {\r\n            const arr = [\r\n                ['Woman', Woman],\r\n                ['Man', Man]\r\n            ];\r\n\r\n            return arr.map((item, ndx) => {\r\n                if (this.state.gender === item[0]) {\r\n                    return (\r\n                        <Avatar key={ndx} isSelected clickHandler={this.handleClick} genderName={item[0]} image={item[1]}/>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <Avatar key={ndx} clickHandler={this.handleClick} genderName={item[0]} image={item[1]}/>\r\n                    )\r\n                }\r\n            })\r\n        };\r\n\r\n        return (\r\n            <div className='page'>\r\n                <h5 className=\"section-title\">\r\n                    Choose your avatar\r\n                </h5>\r\n\r\n                <div className='avatars-wrapper d-flex justify-content-around'>\r\n                    {AvatarsList()}\r\n                </div>\r\n\r\n                <Navigation paddingTopBig>\r\n                    <Link onClick={this.sendUserData} className=\"ml-auto\" to=\"/name\">Next</Link>\r\n                </Navigation>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AvatarBox;","import React from 'react';\r\nimport Navigation from '../Navigation/'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass nameBox extends React.Component {\r\n    state = {\r\n        name: ''\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({name: e.target.value})\r\n    };\r\n\r\n    sendUserData = e => {\r\n        const {name} = this.state;\r\n        const {sendUserData, checkErrors} = this.props;\r\n        const regExp = /^[A-Z]/i;\r\n\r\n        sendUserData(name);\r\n\r\n        const isValid = regExp.test(name);\r\n\r\n        if (name.length < 3 && !isValid ) {\r\n            e.preventDefault();\r\n            checkErrors(2);\r\n        } else {\r\n            checkErrors(0);\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='page'>\r\n                <h5 className=\"section-title\">\r\n                    What's your name?\r\n                </h5>\r\n\r\n                <div className='d-flex justify-content-around'>\r\n                    <input className='form-control rounded-0 w-75' onChange={this.handleChange} type=\"text\"/>\r\n                </div>\r\n\r\n                <Navigation>\r\n                    <Link to=\"/\">Back</Link>\r\n                    <Link onClick={this.sendUserData} to=\"/confirm\">Next</Link>\r\n                </Navigation>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default nameBox;","import React from 'react';\r\nimport Navigation from '../Navigation/'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport Woman from '../../static/images/woman.svg'\r\nimport Man from '../../static/images/man.svg'\r\nimport Avatar from \"../Avatar\";\r\n\r\nclass ConfirmationBox extends React.Component {\r\n    render() {\r\n\r\n        const generateAvatar = () => {\r\n            if (this.props.gender === 'Woman' ) {\r\n                return <Avatar image={Woman}/>\r\n            } else {\r\n                return <Avatar image={Man}/>\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div className='page'>\r\n                <h5 className=\"section-title section-title--mb-small\">\r\n                    Is this correct?\r\n                </h5>\r\n\r\n                <div className='d-flex align-items-center'>\r\n                    {generateAvatar()}\r\n                    <h5 className=\"mb-0\">\r\n                        {this.props.name}\r\n                    </h5>\r\n                </div>\r\n\r\n                <Navigation>\r\n                    <Link to=\"/\">Start again</Link>\r\n                    <Link to=\"/confirm\">Confirm</Link>\r\n                </Navigation>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConfirmationBox;","import React from 'react';\r\nimport { Transition } from 'react-transition-group';\r\n\r\nconst duration = 500;\r\n\r\nconst defaultStyle = {\r\n    transform: `translate(-50%, 100%)`,\r\n    transition: `transform ${duration}ms ease-in-out, background ${duration}ms`\r\n};\r\n\r\nconst transitionStyles = {\r\n    entering: { transform: `translate(-50%, 100%)` },\r\n    entered:  { transform: `translate(-50%, 0)` },\r\n    exiting:  { transform: `translate(-50%, 100%)` },\r\n    exited:  { transform: `translate(-50%, 0)` },\r\n};\r\n\r\n\r\nclass ErrorBox extends React.Component {\r\n\r\n    render() {\r\n        let message = 'error';\r\n\r\n        let errorBoxClass = 'error-box';\r\n\r\n        const checkError = () => {\r\n            const error = this.props.errorType;\r\n\r\n            switch(error) {\r\n                case 0:\r\n                    message = 'Thank You';\r\n                    errorBoxClass = 'error-box error-box--success';\r\n                    break;\r\n                case 1:\r\n                    message = 'First choose your avatar';\r\n                    break;\r\n                case 2:\r\n                    message = 'Write your name';\r\n                    break;\r\n                default: message = 'Unknown error'\r\n            }\r\n        };\r\n\r\n        checkError();\r\n\r\n        return (\r\n            <>\r\n                <Transition unmountOnExit={true} in={this.props.showError} timeout={duration}>\r\n                    {state => (\r\n                        <div style={{\r\n                            ...defaultStyle,\r\n                            ...transitionStyles[state]\r\n                        }}\r\n                             className={errorBoxClass}\r\n                        >\r\n                            {message}\r\n                        </div>\r\n                    )}\r\n                </Transition>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorBox;","import React from 'react';\r\nimport AvatarBox from './AvatarBox/'\r\nimport InputBox from './InputBox/'\r\nimport ConfirmationBox from './ConfirmationBox/'\r\nimport ErrorBox from './ErrorBox'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport {\r\n    CSSTransition,\r\n    TransitionGroup\r\n} from 'react-transition-group';\r\n\r\nclass BaseBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.timeout = null;\r\n    }\r\n\r\n    state = {\r\n        userGender: '',\r\n        userName: '',\r\n        showError: false,\r\n        errorType: 0\r\n    };\r\n\r\n    setUserGender = data => {\r\n        this.setState({userGender: data})\r\n    };\r\n\r\n    setUserName = data => {\r\n        this.setState({userName: data})\r\n    };\r\n\r\n    checkErrors = data => {\r\n        this.setState({\r\n            errorType: data,\r\n        });\r\n\r\n        if (data !== 0) {\r\n            this.setState({\r\n                    showError: true\r\n                }, () => {\r\n                if (this.timeout) {\r\n                    clearTimeout(this.timeout);\r\n\r\n                    this.timeout = setTimeout(() => {\r\n                        this.setState({showError: false})\r\n                    }, 4000)\r\n                } else {\r\n                    this.timeout = setTimeout(() => {\r\n                        this.setState({showError: false})\r\n                    }, 4000)\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <section className='base-box'>\r\n                <Route\r\n                    render={({location}) => {\r\n                        const {pathname} = location;\r\n                        return (\r\n                            <TransitionGroup>\r\n                                <CSSTransition\r\n                                    key={pathname}\r\n                                    classNames=\"page\"\r\n                                    timeout={{\r\n                                        enter: 1000,\r\n                                        exit: 1000,\r\n                                    }}\r\n                                >\r\n                                    <Route\r\n                                        location={location}\r\n                                        render={() => (\r\n                                            <Switch>\r\n                                                <Route\r\n                                                    exact\r\n                                                    path=\"/\"\r\n                                                    render={()=> <AvatarBox checkErrors={this.checkErrors} sendUserData={this.setUserGender}/>}\r\n                                                />\r\n                                                <Route\r\n                                                    path=\"/name\"\r\n                                                    render={()=> <InputBox checkErrors={this.checkErrors} sendUserData={this.setUserName}/>}\r\n                                                />\r\n                                                <Route\r\n                                                    path=\"/confirm\"\r\n                                                    render={()=> <ConfirmationBox name={this.state.userName} gender={this.state.userGender}/>}\r\n                                                />\r\n                                            </Switch>\r\n                                        )}\r\n                                    />\r\n                                </CSSTransition>\r\n                            </TransitionGroup>\r\n                        )\r\n                    }\r\n                    }\r\n                />\r\n\r\n                <ErrorBox showError={this.state.showError} errorType={this.state.errorType}/>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BaseBox;","import React from 'react';\nimport '../static/scss/main.scss'\nimport BaseBox from './BaseBox'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nfunction App() {\n  return (\n      <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"container overflow-hidden\">\n              <BaseBox/>\n          </div>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}